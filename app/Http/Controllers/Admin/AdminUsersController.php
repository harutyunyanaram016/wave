<?phpnamespace App\Http\Controllers\Admin;use App\Http\Requests\UsersRequest;use App\Role;use App\User;use Illuminate\Http\Request;use App\Http\Controllers\Controller;class AdminUsersController extends Controller{    /**     * Display a listing of the resource.     *     * @return \Illuminate\Http\Response     */    public function index()    {        $users = User::all();        return view('admin.users.index', ['users'=> $users]);    }    /**     * Show the form for creating a new resource.     *     * @return \Illuminate\Http\Response     */    public function create()    {        $roles = Role::all()->pluck('name', 'id')->all();        return view('admin.users.create', ['roles'=>$roles]);    }    /**     * Store a newly created resource in storage.     *     * @param  \Illuminate\Http\Request  $request     * @return \Illuminate\Http\Response     */    public function store(UsersRequest $request)    {        $inputData = $request->all();        $inputData['password'] = bcrypt($inputData['password']);        $inputData['email_varif'] = 1;        User::create($inputData);        return redirect()->route('admin.users.index');    }    /**     * Display the specified resource.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function show($id)    {        //    }    /**     * Show the form for editing the specified resource.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function edit($id)    {        $user = User::findOrFail($id);        $roles = Role::all()->pluck('name', 'id')->all();        return view('admin.users.edit', ['user'=>$user,'roles'=>$roles]);    }    /**     * Update the specified resource in storage.     *     * @param  \Illuminate\Http\Request  $request     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function update(UsersRequest $request, $id)    {        $user = User::findOrFail($id);        if (trim($request->password) == '') {            $input = $request->except('password');            if(!$request->status){                $input['status']  = 0;            }        }else {            $input = $request->all();            $input['password'] = bcrypt($input['password']);            if(!$request->status){                $input['status']  = 0;            }        }        $user->update($input);        return redirect()->route('admin.users.index');    }    /**     * Remove the specified resource from storage.     *     * @param  int  $id     * @return \Illuminate\Http\Response     */    public function destroy($id)    {        $user = User::findOrFail($id);        $user->delete();        return redirect()->route('admin.users.index');    }}